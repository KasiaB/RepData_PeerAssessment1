#set the download link and download the data file
if(!file.exists("./activity.csv")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = "./activity.zip")
#unzip the data
unzip(zipfile = "./activity.zip", exdir = ".")}
#read activity dataframe into the memory
activity <- read.csv("activity.csv",colClasses = c("numeric","Date","integer"))
#filter out only complete cases of activity dataframe rows
cpactivity <- activity[complete.cases(activity),]
tsteps_byday <- aggregate(cpactivity$steps, by=list(date=cpactivity$date), FUN=sum)
colnames(tsteps_byday) <- c("date", "total_steps")
hist(tsteps_byday$total_steps,main = "Histogram of the total number of steps taken each day",xlab = "Number of steps per day")
mean_median <- summary(tsteps_byday$total_steps)[3:4]
msteps_byinterval <- aggregate(cpactivity$steps, by=list(interval=cpactivity$interval), FUN=mean)
colnames(msteps_byinterval) <- c("interval", "mean_steps")
plot(msteps_byinterval$interval,msteps_byinterval$mean_steps,type = 'l', main = "Mean number of steps per interval",xlab = "Interval",ylab = "Mean number of steps")
max_steps_interval <- msteps_byinterval[msteps_byinterval$mean_steps == max(msteps_byinterval$mean_steps),1]
max_steps <- msteps_byinterval[msteps_byinterval$mean_steps == max(msteps_byinterval$mean_steps),2]
max_steps_interval <- msteps_byinterval[msteps_byinterval$mean_steps == max(msteps_byinterval$mean_steps),]
max_steps_interval
head(activity)
activity$weekday <- weekdays(activity[,2])
head(activity)
cpactivity$weekday <- weekdays(cpactivity[,2])
head(cpactivity)
tsteps_byweekday <- aggregate(cpactivity$steps, by=list(weekday=cpactivity$weekday), FUN=sum)
str(tsteps_byweekday)
tsteps_byweekday
str(cpactivity)
cpactivity$weekday <- as.Date(weekdays(cpactivity[,2]))
cpactivity$weekday <- factor(cpactivity$weekday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), ordered = TRUE)
str(cpactivity)
head(cpactivity)
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_each(funs(mean))
mean_weekday_interval <- cpactivity %>% group_by(weekday, interval) %>% summarise_each(funs(mean))
mean_weekday_interval <- cpactivity %>% group_by(weekday, interval) %>% summarise(funs(mean))
head(mean_weekday_interval)
mean(cpactivity$steps[])
View(cpactivity)
library(dplyr)
cpactivity %>% group_by(weekday, interval) %>% summarise(a_mean=(mean(steps)))
comp_imput <- cpactivity %>% group_by(weekday, interval) %>% summarise(a_mean=(mean(steps)))
str(comp_imput)
View(comp_imput)
activity$steps[is.na(activity$steps)] <-
comp_imput <- cpactivity %>% group_by(weekday, interval) %>% summarise(mean=(mean(steps)))
View(comp_imput)
activity$newsteps[is.na(activity$steps)] <- comp_imput$mean[comp_imput$weekday==activity$weekday&comp_imput$interval==activity$interval,]
activity$newsteps[is.na(activity$steps)] <- comp_imput$mean[comp_imput$weekday==activity$weekday&comp_imput$interval==activity$interval]
View(activity)
sum(is.na(activity$steps))
activity$newsteps[is.na(activity$steps)] <- comp_imput$mean[comp_imput$weekday==activity$weekday&comp_imput$interval==activity$interval]
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
